import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'

export type QueueStatusDto = QueuePassed | QueuePosition | NonQueued

export interface NonQueued {
  status: "not-queued"
}

export interface QueuePassed {
  connection_url: string
}

export interface QueuePosition {
  position: number
  total: number
}

const Home: NextPage = () => {
  const [token, setToken]  = useState('');
  const [queueStatus, setQueueStatus] = useState<QueueStatusDto>();

  useEffect(() => {
    setToken(window.location.hash.split('#token=').pop()!)
  }, [])

  useEffect(() => {
    const interval = setInterval(async () =>{
      const response = await fetch(`http://game.ss220.space:3000/api/queue/status/7720?time=${Date.now()}`, {
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`,
        },
        cache: 'no-cache',
      });
      const status = await response.json();
      setQueueStatus(status);
    }, 1000)
    return function cleanup() {
      clearInterval(interval)
    };
  }, [token])
  
  let joinedQueueStatus: string;

  const handleJoinQueue = async () => {
    const data = {
      "server_port": "7720"
    }
    const response = await fetch("http://game.ss220.space:3000/api/queue/add", {
      method: 'POST', // *GET, POST, PUT, DELETE, etc.
      //mode: 'same-origin', // no-cors, *cors, same-origin
      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
      //credentials: 'same-origin', // include, *same-origin, omit
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`,
      },
      //redirect: 'follow', // manual, *follow, error
      //referrerPolicy: 'no-referrer', // no-referrer, *client
      body: JSON.stringify(data), // body data type must match "Content-Type" header
    });
    console.log(response)
    if (response.ok) {
      joinedQueueStatus = "Joined successful!"
    } else {
      const parsed = await response.json()
      console.log(parsed)
      joinedQueueStatus = parsed.message || "Error"
    }
  } 

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta httpEquiv="X-UA-Compatible" content="IE=edge"/>
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://ss220.space">SS220!</a>
        </h1>

        <p className={styles.description}>
          Token {token}
        </p>

        <div className={styles.grid}>
          <button onClick={handleJoinQueue} className={styles.card}>
            <h2>Join Test server &rarr;</h2>
            <p>{queueStatus}</p>
          </button>
        </div>
      </main>
    </div>
  )
}

export default Home
